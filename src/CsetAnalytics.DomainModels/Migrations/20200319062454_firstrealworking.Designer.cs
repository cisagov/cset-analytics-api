// <auto-generated />
using System;
using CsetAnalytics.DomainModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CsetAnalytics.DomainModels.Migrations
{
    [DbContext(typeof(CsetContext))]
    [Migration("20200319062454_firstrealworking")]
    partial class firstrealworking
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.AnalyticDemographic", b =>
                {
                    b.Property<int>("AnalyticDemographicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Assets")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("IndustryId")
                        .HasColumnType("integer");

                    b.Property<int>("SectorId")
                        .HasColumnType("integer");

                    b.Property<string>("Size")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("AnalyticDemographicId");

                    b.HasIndex("SectorId", "IndustryId");

                    b.ToTable("AnalyticDemographics");
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.AnalyticQuestionAnswer", b =>
                {
                    b.Property<int>("AnalyticQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Answer_Text")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Assessment_Id")
                        .HasColumnType("integer");

                    b.Property<int?>("Assessment_Id1")
                        .HasColumnType("integer");

                    b.Property<Guid?>("Component_Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("Custom_Question_Guid")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Is_Component")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Framework")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is_Requirement")
                        .HasColumnType("boolean");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Question_Or_Requirement_Id")
                        .HasColumnType("integer");

                    b.HasKey("AnalyticQuestionId");

                    b.HasIndex("Answer_Text");

                    b.HasIndex("Assessment_Id");

                    b.HasIndex("Assessment_Id1");

                    b.ToTable("AnalyticQuestionAnswer","public");
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.Answer_Lookup", b =>
                {
                    b.Property<string>("Answer_Text")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Answer_Full_Name")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("Answer_Text");

                    b.ToTable("Answer_Lookup");

                    b.HasData(
                        new
                        {
                            Answer_Text = "A",
                            Answer_Full_Name = "Alternate"
                        },
                        new
                        {
                            Answer_Text = "N",
                            Answer_Full_Name = "No"
                        },
                        new
                        {
                            Answer_Text = "NA",
                            Answer_Full_Name = "Not Applicable"
                        },
                        new
                        {
                            Answer_Text = "U",
                            Answer_Full_Name = "Unanswered"
                        },
                        new
                        {
                            Answer_Text = "Y",
                            Answer_Full_Name = "Yes"
                        });
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<bool>("ChangePassword")
                        .HasColumnType("boolean");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<Guid?>("Guid_Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsSuperUser")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<bool>("PasswordResetRequired")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.Assessment", b =>
                {
                    b.Property<int>("Assessment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int>("AnalyticDemographicId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AssessmentCreatedDate")
                        .HasColumnType("timestamptz");

                    b.Property<string>("AssessmentCreatorId")
                        .HasColumnType("text");

                    b.Property<DateTime>("Assessment_Date")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Assessment_GUID")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastAccessedDate")
                        .HasColumnType("timestamptz");

                    b.HasKey("Assessment_Id");

                    b.HasIndex("AnalyticDemographicId");

                    b.HasIndex("AssessmentCreatorId");

                    b.ToTable("Assessments","public");
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.Configuration", b =>
                {
                    b.Property<int>("ConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ConfigurationKey")
                        .HasColumnType("text");

                    b.Property<string>("ConfigurationValue")
                        .HasColumnType("text");

                    b.HasKey("ConfigurationId");

                    b.ToTable("Configuration","public");
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.PasswordHistory", b =>
                {
                    b.Property<int>("PasswordHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AspNetUserId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedUserId")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.HasKey("PasswordHistoryId");

                    b.HasIndex("CreatedUserId");

                    b.ToTable("PasswordHistory","public");
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.Sector", b =>
                {
                    b.Property<int>("SectorId")
                        .HasColumnType("integer");

                    b.Property<string>("SectorName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("SectorId");

                    b.ToTable("Sector");

                    b.HasData(
                        new
                        {
                            SectorId = 1,
                            SectorName = "Chemical Sector (Not Oil and Gas)"
                        },
                        new
                        {
                            SectorId = 2,
                            SectorName = "Commercial Facilities Sector"
                        },
                        new
                        {
                            SectorId = 3,
                            SectorName = "Communications Sector"
                        },
                        new
                        {
                            SectorId = 4,
                            SectorName = "Critical Manufacturing Sector"
                        },
                        new
                        {
                            SectorId = 5,
                            SectorName = "Dams Sector"
                        },
                        new
                        {
                            SectorId = 6,
                            SectorName = "Defense Industrial Base Sector"
                        },
                        new
                        {
                            SectorId = 7,
                            SectorName = "Emergency Services Sector"
                        },
                        new
                        {
                            SectorId = 8,
                            SectorName = "Energy Sector"
                        },
                        new
                        {
                            SectorId = 9,
                            SectorName = "Financial Services Sector"
                        },
                        new
                        {
                            SectorId = 10,
                            SectorName = "Food and Agriculture Sector"
                        },
                        new
                        {
                            SectorId = 11,
                            SectorName = "Government Facilities Sector"
                        },
                        new
                        {
                            SectorId = 12,
                            SectorName = "Healthcare and Public Health Sector"
                        },
                        new
                        {
                            SectorId = 13,
                            SectorName = "Information Technology Sector"
                        },
                        new
                        {
                            SectorId = 14,
                            SectorName = "Nuclear Reactors, Materials, and Waste Sector"
                        },
                        new
                        {
                            SectorId = 15,
                            SectorName = "Transportation Systems Sector"
                        },
                        new
                        {
                            SectorId = 16,
                            SectorName = "Water and Wastewater Systems Sector"
                        });
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.Sector_Industry", b =>
                {
                    b.Property<int>("SectorId")
                        .HasColumnType("integer");

                    b.Property<int>("IndustryId")
                        .HasColumnType("integer");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.HasKey("SectorId", "IndustryId");

                    b.ToTable("Sector_Industries");

                    b.HasData(
                        new
                        {
                            SectorId = 1,
                            IndustryId = 1,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 1,
                            IndustryId = 78,
                            IndustryName = "Basic Chemicals"
                        },
                        new
                        {
                            SectorId = 1,
                            IndustryId = 79,
                            IndustryName = "Specialty Products"
                        },
                        new
                        {
                            SectorId = 1,
                            IndustryId = 80,
                            IndustryName = "Pharmaceutical Products"
                        },
                        new
                        {
                            SectorId = 1,
                            IndustryId = 81,
                            IndustryName = "Consumer Products"
                        },
                        new
                        {
                            SectorId = 1,
                            IndustryId = 82,
                            IndustryName = "Agricultural Products"
                        },
                        new
                        {
                            SectorId = 2,
                            IndustryId = 2,
                            IndustryName = "Entertainment and Media"
                        },
                        new
                        {
                            SectorId = 2,
                            IndustryId = 3,
                            IndustryName = "Gaming"
                        },
                        new
                        {
                            SectorId = 2,
                            IndustryId = 4,
                            IndustryName = "Lodging"
                        },
                        new
                        {
                            SectorId = 2,
                            IndustryId = 5,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 2,
                            IndustryId = 6,
                            IndustryName = "Outdoor Events"
                        },
                        new
                        {
                            SectorId = 2,
                            IndustryId = 7,
                            IndustryName = "Public Assembly"
                        },
                        new
                        {
                            SectorId = 2,
                            IndustryId = 8,
                            IndustryName = "Real Estate"
                        },
                        new
                        {
                            SectorId = 2,
                            IndustryId = 9,
                            IndustryName = "Retail"
                        },
                        new
                        {
                            SectorId = 2,
                            IndustryId = 10,
                            IndustryName = "Sports Leagues"
                        },
                        new
                        {
                            SectorId = 3,
                            IndustryId = 11,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 3,
                            IndustryId = 12,
                            IndustryName = "Telecommunications"
                        },
                        new
                        {
                            SectorId = 3,
                            IndustryId = 13,
                            IndustryName = "Wireless Communications Service Providers"
                        },
                        new
                        {
                            SectorId = 3,
                            IndustryId = 83,
                            IndustryName = "Broadcasting"
                        },
                        new
                        {
                            SectorId = 3,
                            IndustryId = 84,
                            IndustryName = "Cable"
                        },
                        new
                        {
                            SectorId = 3,
                            IndustryId = 85,
                            IndustryName = "Satellite"
                        },
                        new
                        {
                            SectorId = 3,
                            IndustryId = 86,
                            IndustryName = "Wireline"
                        },
                        new
                        {
                            SectorId = 4,
                            IndustryId = 14,
                            IndustryName = "Electrical Equipment, Appliance and Component Manufacturing"
                        },
                        new
                        {
                            SectorId = 4,
                            IndustryId = 15,
                            IndustryName = "Machinery Manufacturing"
                        },
                        new
                        {
                            SectorId = 4,
                            IndustryId = 16,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 4,
                            IndustryId = 17,
                            IndustryName = "Primary Metal Manufacturing"
                        },
                        new
                        {
                            SectorId = 4,
                            IndustryId = 18,
                            IndustryName = "Transportation and Heavy Equipment Manufacturing"
                        },
                        new
                        {
                            SectorId = 4,
                            IndustryId = 87,
                            IndustryName = "Manufacturing"
                        },
                        new
                        {
                            SectorId = 4,
                            IndustryId = 88,
                            IndustryName = "Heavy Machinery Manufacturing"
                        },
                        new
                        {
                            SectorId = 5,
                            IndustryId = 19,
                            IndustryName = "Dams"
                        },
                        new
                        {
                            SectorId = 5,
                            IndustryId = 20,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 5,
                            IndustryId = 21,
                            IndustryName = "Private Hydropower Facilities in the US"
                        },
                        new
                        {
                            SectorId = 5,
                            IndustryId = 89,
                            IndustryName = "Levees"
                        },
                        new
                        {
                            SectorId = 5,
                            IndustryId = 90,
                            IndustryName = "Navigation Locks"
                        },
                        new
                        {
                            SectorId = 5,
                            IndustryId = 91,
                            IndustryName = "Tailings and Waste Impoundments"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 22,
                            IndustryName = "Aircraft Industry"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 23,
                            IndustryName = "Ammunition"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 24,
                            IndustryName = "Combat Vehicle"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 25,
                            IndustryName = "Communications"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 26,
                            IndustryName = "Defense Contractors    "
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 27,
                            IndustryName = "Electrical Industry Commodities"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 28,
                            IndustryName = "Electronics"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 29,
                            IndustryName = "Mechanical Industry Commodities"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 30,
                            IndustryName = "Missile Industry"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 31,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 32,
                            IndustryName = "Research and Development Facilities"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 33,
                            IndustryName = "Shipbuilding Industry"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 34,
                            IndustryName = "Space"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 35,
                            IndustryName = "Structural Industry Commodities"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 36,
                            IndustryName = "Troop Support"
                        },
                        new
                        {
                            SectorId = 6,
                            IndustryId = 37,
                            IndustryName = "Weapons"
                        },
                        new
                        {
                            SectorId = 7,
                            IndustryId = 38,
                            IndustryName = "Emergency Management"
                        },
                        new
                        {
                            SectorId = 7,
                            IndustryId = 39,
                            IndustryName = "Emergency Medical Services"
                        },
                        new
                        {
                            SectorId = 7,
                            IndustryId = 40,
                            IndustryName = "Fire and Rescue Services"
                        },
                        new
                        {
                            SectorId = 7,
                            IndustryId = 41,
                            IndustryName = "Law Enforcement    "
                        },
                        new
                        {
                            SectorId = 7,
                            IndustryId = 42,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 7,
                            IndustryId = 43,
                            IndustryName = "Public Works"
                        },
                        new
                        {
                            SectorId = 8,
                            IndustryId = 44,
                            IndustryName = "Electric Power Generation, Transmission and Distribution      "
                        },
                        new
                        {
                            SectorId = 8,
                            IndustryId = 45,
                            IndustryName = "Natural Gas      "
                        },
                        new
                        {
                            SectorId = 8,
                            IndustryId = 46,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 8,
                            IndustryId = 47,
                            IndustryName = "Petroleum Refineries"
                        },
                        new
                        {
                            SectorId = 8,
                            IndustryId = 92,
                            IndustryName = "Oil and Natural Gas"
                        },
                        new
                        {
                            SectorId = 9,
                            IndustryId = 48,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 9,
                            IndustryId = 49,
                            IndustryName = "US Banks"
                        },
                        new
                        {
                            SectorId = 9,
                            IndustryId = 50,
                            IndustryName = "US Credit Unions"
                        },
                        new
                        {
                            SectorId = 9,
                            IndustryId = 93,
                            IndustryName = "Consumer Services"
                        },
                        new
                        {
                            SectorId = 9,
                            IndustryId = 94,
                            IndustryName = "Credit and Liquidity Products"
                        },
                        new
                        {
                            SectorId = 9,
                            IndustryId = 95,
                            IndustryName = "Investment Products"
                        },
                        new
                        {
                            SectorId = 9,
                            IndustryId = 96,
                            IndustryName = "Risk Transfer Products"
                        },
                        new
                        {
                            SectorId = 10,
                            IndustryId = 51,
                            IndustryName = "Beverage Manufacturing Plants"
                        },
                        new
                        {
                            SectorId = 10,
                            IndustryId = 52,
                            IndustryName = "Food Manufacturing Plants"
                        },
                        new
                        {
                            SectorId = 10,
                            IndustryId = 53,
                            IndustryName = "Food Services"
                        },
                        new
                        {
                            SectorId = 10,
                            IndustryId = 54,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 10,
                            IndustryId = 97,
                            IndustryName = "Supply"
                        },
                        new
                        {
                            SectorId = 10,
                            IndustryId = 98,
                            IndustryName = "Processing, Packaging, and Production"
                        },
                        new
                        {
                            SectorId = 10,
                            IndustryId = 99,
                            IndustryName = "Product Storage"
                        },
                        new
                        {
                            SectorId = 10,
                            IndustryId = 100,
                            IndustryName = "Product Transportation"
                        },
                        new
                        {
                            SectorId = 10,
                            IndustryId = 101,
                            IndustryName = "Product Distribution"
                        },
                        new
                        {
                            SectorId = 10,
                            IndustryId = 102,
                            IndustryName = "Supporting Facilities"
                        },
                        new
                        {
                            SectorId = 11,
                            IndustryId = 55,
                            IndustryName = "Local Governments"
                        },
                        new
                        {
                            SectorId = 11,
                            IndustryId = 56,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 11,
                            IndustryId = 57,
                            IndustryName = "State Governments"
                        },
                        new
                        {
                            SectorId = 11,
                            IndustryId = 58,
                            IndustryName = "Territorial Governments"
                        },
                        new
                        {
                            SectorId = 11,
                            IndustryId = 59,
                            IndustryName = "Tribal Governments"
                        },
                        new
                        {
                            SectorId = 11,
                            IndustryId = 103,
                            IndustryName = "Public Facilities"
                        },
                        new
                        {
                            SectorId = 11,
                            IndustryId = 104,
                            IndustryName = "Non-Public Facilities"
                        },
                        new
                        {
                            SectorId = 12,
                            IndustryId = 60,
                            IndustryName = "Hospitals"
                        },
                        new
                        {
                            SectorId = 12,
                            IndustryId = 61,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 12,
                            IndustryId = 62,
                            IndustryName = "Residential Care Facilities"
                        },
                        new
                        {
                            SectorId = 12,
                            IndustryId = 105,
                            IndustryName = "Direct Patient Care"
                        },
                        new
                        {
                            SectorId = 12,
                            IndustryId = 106,
                            IndustryName = "Health IT"
                        },
                        new
                        {
                            SectorId = 12,
                            IndustryId = 107,
                            IndustryName = "Health Plans and Payers"
                        },
                        new
                        {
                            SectorId = 12,
                            IndustryId = 108,
                            IndustryName = "Fatality Management Services"
                        },
                        new
                        {
                            SectorId = 12,
                            IndustryId = 109,
                            IndustryName = "Medical Materials"
                        },
                        new
                        {
                            SectorId = 12,
                            IndustryId = 110,
                            IndustryName = "Support Services"
                        },
                        new
                        {
                            SectorId = 13,
                            IndustryId = 63,
                            IndustryName = "Information Technology"
                        },
                        new
                        {
                            SectorId = 13,
                            IndustryId = 64,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 13,
                            IndustryId = 111,
                            IndustryName = "IT Production"
                        },
                        new
                        {
                            SectorId = 13,
                            IndustryId = 112,
                            IndustryName = "DNS Services"
                        },
                        new
                        {
                            SectorId = 13,
                            IndustryId = 113,
                            IndustryName = "Identity and Trust Support Management"
                        },
                        new
                        {
                            SectorId = 13,
                            IndustryId = 114,
                            IndustryName = "Internet Content and Service Providers"
                        },
                        new
                        {
                            SectorId = 13,
                            IndustryId = 115,
                            IndustryName = "Internet Routing and Connection"
                        },
                        new
                        {
                            SectorId = 13,
                            IndustryId = 116,
                            IndustryName = "Incident Management"
                        },
                        new
                        {
                            SectorId = 14,
                            IndustryId = 65,
                            IndustryName = "Operating Nuclear Power Plants"
                        },
                        new
                        {
                            SectorId = 14,
                            IndustryId = 66,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 14,
                            IndustryId = 117,
                            IndustryName = "Fuel Cycle Facilities"
                        },
                        new
                        {
                            SectorId = 14,
                            IndustryId = 118,
                            IndustryName = "Nuclear Materials Transport"
                        },
                        new
                        {
                            SectorId = 14,
                            IndustryId = 119,
                            IndustryName = "Radioactive Waste"
                        },
                        new
                        {
                            SectorId = 14,
                            IndustryId = 120,
                            IndustryName = "Radioactive Materials"
                        },
                        new
                        {
                            SectorId = 15,
                            IndustryId = 67,
                            IndustryName = "Aviation"
                        },
                        new
                        {
                            SectorId = 15,
                            IndustryId = 68,
                            IndustryName = "Freight Rail"
                        },
                        new
                        {
                            SectorId = 15,
                            IndustryId = 69,
                            IndustryName = "Highway (truck transportation)"
                        },
                        new
                        {
                            SectorId = 15,
                            IndustryId = 70,
                            IndustryName = "Maritime"
                        },
                        new
                        {
                            SectorId = 15,
                            IndustryId = 71,
                            IndustryName = "Mass Transit and Passenger Rail"
                        },
                        new
                        {
                            SectorId = 15,
                            IndustryId = 72,
                            IndustryName = "Municipalities with Traffic Control Systems"
                        },
                        new
                        {
                            SectorId = 15,
                            IndustryId = 73,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 15,
                            IndustryId = 74,
                            IndustryName = "Pipelines (carries natural gas, hazardous liquids, and various chemicals.)"
                        },
                        new
                        {
                            SectorId = 16,
                            IndustryId = 75,
                            IndustryName = "Other"
                        },
                        new
                        {
                            SectorId = 16,
                            IndustryId = 76,
                            IndustryName = "Public Water Systems"
                        },
                        new
                        {
                            SectorId = 16,
                            IndustryId = 77,
                            IndustryName = "Publicly Owned Treatment Works"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.AnalyticDemographic", b =>
                {
                    b.HasOne("CsetAnalytics.DomainModels.Models.Sector_Industry", "Sector_Industry")
                        .WithMany("AnalyticDemographics")
                        .HasForeignKey("SectorId", "IndustryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.AnalyticQuestionAnswer", b =>
                {
                    b.HasOne("CsetAnalytics.DomainModels.Models.Answer_Lookup", "Answer_Lookup")
                        .WithMany("AnalyticQuestionAnswers")
                        .HasForeignKey("Answer_Text")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("CsetAnalytics.DomainModels.Models.Assessment", "Assessment")
                        .WithMany("Questions")
                        .HasForeignKey("Assessment_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CsetAnalytics.DomainModels.Models.Assessment", null)
                        .WithMany("AnalyticQuestionAnswers")
                        .HasForeignKey("Assessment_Id1");
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.Assessment", b =>
                {
                    b.HasOne("CsetAnalytics.DomainModels.Models.AnalyticDemographic", "AnalyticDemographic")
                        .WithMany("Assessments")
                        .HasForeignKey("AnalyticDemographicId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("CsetAnalytics.DomainModels.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Assessments")
                        .HasForeignKey("AssessmentCreatorId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.PasswordHistory", b =>
                {
                    b.HasOne("CsetAnalytics.DomainModels.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("PasswordHistories")
                        .HasForeignKey("CreatedUserId");
                });

            modelBuilder.Entity("CsetAnalytics.DomainModels.Models.Sector_Industry", b =>
                {
                    b.HasOne("CsetAnalytics.DomainModels.Models.Sector", "Sector")
                        .WithMany("Sector_Industry")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CsetAnalytics.DomainModels.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CsetAnalytics.DomainModels.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CsetAnalytics.DomainModels.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CsetAnalytics.DomainModels.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
